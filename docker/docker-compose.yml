services:
  # PostgreSQL Database
  db:
    image: postgres:17-alpine
    container_name: skillverse-db
    environment:
      POSTGRES_DB: ${DOCKER_DB_NAME:-skillverse_db}
      POSTGRES_USER: ${DOCKER_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DOCKER_DB_PASSWORD:-12345}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - skillverse-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d skillverse_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: skillverse-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-RedisSecure2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - skillverse-net
    restart: unless-stopped

  # Spring Boot Backend
  backend:
    build:
      context: ../../backend  # Path tới backend repo
      dockerfile: Dockerfile
    container_name: skillverse-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/skillverse_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=12345
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=RedisSecure2024
      - SERVER_PORT=8080
      - JWT_SECRET=${JWT_SECRET:-1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - skillverse-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend
  frontend:
    build:
      context: ../../frontend  # Path tới frontend repo
      dockerfile: Dockerfile
    container_name: skillverse-frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - skillverse-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  skillverse-network:
    driver: bridge
    name: skillverse-network

volumes:
  postgres_data:
    driver: local
    name: skillverse-postgres-data
  redis_data:
    driver: local
    name: skillverse-redis-data